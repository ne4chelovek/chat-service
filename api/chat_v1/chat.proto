syntax = "proto3";

package chat_v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/ne4chelovek/chat_service/grpc/pkg/chat_v1;chat_v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "Chat API"
        version: "0.1.0"
        contact: {
            name: "Mikhail Savchuk"
            email: "mikhaildisav@gmail.com"
        };
    };

    host: "localhost:8080",
    schemes: HTTP,
    schemes: HTTPS,
    consumes: "application/json",
    produces: "application/json",
};

// Ручки по созданию чата и отправке сообщение
service Chat {
    rpc Create(CreateRequest) returns(CreateResponse){
        option (google.api.http) = {
            post: "/chat/v1/create"
            body: "*"
        };
    }
    rpc Get(GetRequest) returns(GetResponse){
        option (google.api.http) = {
            get: "/chat/v1"
        };
    }
    rpc Delete(DeleteRequest) returns(google.protobuf.Empty){
        option (google.api.http) = {
            delete: "/chat/v1"
        };
    }
    rpc SendMessage(SendMessageRequest) returns (SendMessageResponse){
        option (google.api.http) = {
            post: "/chat/v1/send"
            body: "*"
        };
    }
    rpc ConnectChat(ConnectChatRequest) returns(stream Message);
}
message ConnectChatRequest {
    string chat_id = 1;
    string username = 2;
}

//Ручка создания нового чата
message CreateRequest {
    repeated string usernames = 1;
}

//возвращаем ID чата
message CreateResponse {
    int64 id = 1;
}

//Удаление чата из системы по его индефикатору
message DeleteRequest {
    int64 id = 1;
}   

message Message {
    string from = 1;
    string text = 2 [(validate.rules).string = {min_len: 1, max_len: 100}]; 
    google.protobuf.Timestamp crated_at = 4;
}

//Ручка отправки сообщения на сервер
message SendMessageRequest {
    int64 chatId = 1;
    Message message = 2;
}

//Ручка оповещения отправки
message SendMessageResponse {
    string status = 1;
}

message GetRequest {
    int64 id = 1;
}

message GetResponse {
    repeated string usernames = 1;
}