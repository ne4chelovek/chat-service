name: CI

on:
  push:
    branches: [main, master]

env:
  REGISTRY: "cr.selcloud.ru/ne4chelovek"
  IMAGE_NAME: "mikle"
  CONTAINER_NAME: "chat-server-container"
  DEPLOY_DIR: "/root"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Prepare certificates
        run: |
          mkdir -p certs
          echo "${{ secrets.SERVICE_KEY }}" > certs/service.key
          echo "${{ secrets.SERVICE_PEM }}" > certs/service.pem
          chmod -R 700 certs

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          registry: ${{ env.REGISTRY }}

      - name: Build and push main image
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7)
          docker buildx build \
            --platform linux/amd64 \
            --push \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$TAG \
            -f Dockerfile .

      - name: Build and push migrator image
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7)
          docker buildx build \
            --platform linux/amd64 \
            --push \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-migrator:$TAG \
            -f migration.Dockerfile .

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate deployment files
        run: |
          mkdir -p deploy
          cp docker-compose.yml deploy/
          cp -r migrations deploy/
          
          # Генерируем .env с корректными переменными
          TAG=$(echo $GITHUB_SHA | head -c7)
          cat <<EOF > deploy/.env
          TAG=$TAG
          REGISTRY=${{ env.REGISTRY }}
          IMAGE_NAME=${{ env.IMAGE_NAME }}
          PG_DATABASE_NAME=${{ secrets.DB_NAME }}
          PG_USER=${{ secrets.DB_USER }}
          PG_PASSWORD=${{ secrets.DB_PASSWORD }}
          PG_PORT=5431
          MIGRATION_DIR=./migrations
          EOF
          
          echo "Generated TAG: $TAG"

      - name: Upload files to server
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSHKEY }}
          source: "deploy/*"
          target: ${{ env.DEPLOY_DIR }}
          strip_components: 1

      - name: Deploy application
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSHKEY }}
          script: |
            cd /root
            echo "=== Current TAG ==="
            grep TAG= .env
            
            echo "=== Pulling images ==="
            docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} ${{ env.REGISTRY }}
            docker compose pull
            
            echo "=== Starting containers ==="
            docker compose up -d --force-recreate
            
            echo "=== Deployment status ==="
            docker compose ps